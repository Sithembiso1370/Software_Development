Template management
    Template management is another set of core tasks that will need to be accessed by
    almost every aspect of our social network code. Every page request needs to display
    something to the user, and for each user the page will normally be different, and
    contain dynamic data from our database.
    For example, when any user views their friends list, they will all see the same page
    layout; however, the list of friends will be different. When they view a profile, all
    profiles will have the same layout, with different data, and in some cases, some
    additional sections to the page, depending on how complete their profile is.
    Our template manager should take a series of template files, which contain the
    HTML to be sent to the browser, and manage data, which should be inserted
    into it, as well as process this dynamic replacement of data.
    Additional templates should be able to be included within a template, should they
    be requiredâ€”for instance when viewing the profile of a user who has comments
    enabled, a comments list and form should be displayed, whereas a user without this
    would not see a list of a comments form.
    The data and template contents will be stored in a Page object; the management of
    this object and its processing will be handled by the template object. Let's go through
    what we need in our template class (registry/template.class.php).

Firstly, we need to create the object, which involves assigning our registry to a
variable, including the page class, and instantiating a page object.