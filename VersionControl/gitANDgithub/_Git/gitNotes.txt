
//Create a readme file
echo "# WebDev" >> README.md

Initialise git repository
git init

//Stage Readme.md
git add README.md

// Commite all staged
git commit -m "first commit"

// Move to the main branch
git branch -M main

// Add a remote branch url
git remote add origin https://github.com/Sithembiso1370/WebDev.git

//Push the new changes to the remote branch
git push -u origin main

// GET the current git repository
git remote get-url origin

//Should you want this for scripting purposes, you can get only the URL with
git config --get remote.origin.url


/ print all remote repos
git remote -v


//Display current branch i am on
git rev-parse --abbrev-ref HEAD

//or with Git 2.22 and above:
git branch --show-current

//If you know you want to use git reset, it still depends what you mean by "uncommit". If all you want to do is undo the act of committing, leaving everything else intact, use:
git reset --soft HEAD^


//If you want to undo the act of committing and everything you'd staged, but leave the work tree (your files) intact:
git reset HEAD^

//And if you actually want to completely undo it, throwing away all uncommitted changes, resetting everything to the previous commit (as the original question asked):
git reset --hard HEAD^